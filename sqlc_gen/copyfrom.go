// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package sqlcgen

import (
	"context"
)

// iteratorForCreateOrderTrucks implements pgx.CopyFromSource.
type iteratorForCreateOrderTrucks struct {
	rows                 []CreateOrderTrucksParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateOrderTrucks) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateOrderTrucks) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Date,
		r.rows[0].OrderID,
		r.rows[0].TruckPlate,
		r.rows[0].OrderSequence,
		r.rows[0].OrderStatus,
	}, nil
}

func (r iteratorForCreateOrderTrucks) Err() error {
	return nil
}

func (q *Queries) CreateOrderTrucks(ctx context.Context, arg []CreateOrderTrucksParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"order_trucks"}, []string{"date", "order_id", "truck_plate", "order_sequence", "order_status"}, &iteratorForCreateOrderTrucks{rows: arg})
}
