// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: order_trucks.sql

package entities

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type CreateOrderTrucksParams struct {
	Date          string
	OrderID       int64
	TruckPlate    string
	OrderSequence pgtype.Int8
}

const listOrderTrucksByPlateAndDate = `-- name: ListOrderTrucksByPlateAndDate :many
SELECT date, order_id, truck_plate, order_sequence FROM order_trucks
WHERE truck_plate = $1 AND "date" = $2
ORDER BY date
`

type ListOrderTrucksByPlateAndDateParams struct {
	TruckPlate string
	Date       string
}

func (q *Queries) ListOrderTrucksByPlateAndDate(ctx context.Context, arg ListOrderTrucksByPlateAndDateParams) ([]OrderTruck, error) {
	rows, err := q.db.Query(ctx, listOrderTrucksByPlateAndDate, arg.TruckPlate, arg.Date)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []OrderTruck
	for rows.Next() {
		var i OrderTruck
		if err := rows.Scan(
			&i.Date,
			&i.OrderID,
			&i.TruckPlate,
			&i.OrderSequence,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
